import random
from transformers import pipeline
from textblob import TextBlob

# Load NLP Pipelines
sentiment_analyzer = pipeline("sentiment-analysis",model="distilbert/distilbert-base-uncased-finetuned-sst-2-english")

emotion_analyzer = pipeline("text-classification",
                            model="bhadresh-savani/distilbert-base-uncased-emotion")

# Distress keywords (expand as needed)
DISTRESS_KEYWORDS = ["suicide", "self-harm", "kill myself", "end it", "worthless", "no reason to live"]


def analyze_message(message):
    sentiment = sentiment_analyzer(message)[0]['label']
    emotion = emotion_analyzer(message)[0]['label']

    # Keyword distress check
    distress_detected = any(kw in message.lower() for kw in DISTRESS_KEYWORDS)

    return sentiment, emotion, distress_detected

def decide_response_type(sentiment, emotion, distress_detected):
    if distress_detected:
        return "crisis"
    elif sentiment in ["POSITIVE"] or emotion in ["joy", "love"]:
        return "positive"
    elif emotion in ["sadness", "fear", "anger", "anxiety"] or sentiment == "NEGATIVE":
        return "supportive"
    else:
        return "neutral"

def generate_response(message):
    sentiment, emotion, distress_detected = analyze_message(message)
    response_type = decide_response_type(sentiment, emotion, distress_detected)

    if response_type == "positive":
        responses = [
            "Thatâ€™s amazing progress! Even small wins matter, and you should feel proud. ðŸŒŸ",
            "I love how youâ€™re moving forwardâ€”keep celebrating your journey!",
            "Your energy is inspiring, keep going with this positive vibe!"
        ]

    elif response_type == "supportive":
        responses = [
            "I hear youâ€”itâ€™s completely okay to feel like this. ðŸ’™ Want me to share a quick breathing exercise?",
            "That sounds tough. Remember, you donâ€™t have to go through it alone.",
            "Itâ€™s okay to slow down and take care of yourself. Maybe a short walk or journaling could help."
        ]

    elif response_type == "crisis":
        responses = [
            "Iâ€™m really concerned about how youâ€™re feeling. Youâ€™re not alone in this. Please consider reaching out to a trusted friend, counselor, or calling a crisis helpline immediately. ðŸ’™",
            "You are important and your life matters. If youâ€™re in danger of harming yourself, please contact your local emergency number right now.",
            "Iâ€™m here with you. It may help to talk with someone trained to give you the right supportâ€”please reach out to a mental health professional or a helpline."
        ]

    else:
        responses = [
            "How has your day been so far? Anything on your mind?",
            "Iâ€™d love to hear more about what youâ€™re thinking.",
            "Iâ€™m here to listen. Whatâ€™s been on your mind today?"
        ]

    return random.choice(responses)

if __name__ == "__main__":
    print("ðŸ¤– Cognicare Chatbot: Supporting with empathy ðŸŒ¸")
    while True:
        user_input = input("You: ")
        if user_input.lower() in ["quit", "exit"]:
            print("Cognicare: Take care of yourself ðŸ’™. Talk soon!")
            break
        bot_reply = generate_response(user_input)
        print("Cognicare:", bot_reply)
